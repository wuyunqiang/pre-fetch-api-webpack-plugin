"use strict";function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;},_typeof(obj);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return _typeof(key)==="symbol"?key:String(key);}function _toPrimitive(input,hint){if(_typeof(input)!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(_typeof(res)!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return(hint==="string"?String:Number)(input);}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1;}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err;}finally{try{if(!_n&&null!=_i["return"]&&(_r=_i["return"](),Object(_r)!==_r))return;}finally{if(_d)throw _e;}}return _arr;}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function preEntry(optionList){try{if(!fetch){return;}var staticObj={hash:'hash',path:'path',all:'all'};var getPageHash=function getPageHash(){return location.hash||'';};var getPagePath=function getPagePath(){return location.pathname;};var type='';var cur=optionList.find(function(item){if(item.pathList){var pathList=item.pathList||[];var _res=pathList.some(function(path){return path===getPagePath()||path===staticObj.all;});if(_res){type=staticObj.path;return item;}}var hashList=item.hashList||[];var res=hashList.some(function(hash){return hash===getPageHash()||hash===staticObj.all;});type=staticObj.hash;return res?item:'';});if(!cur){return;}var preService=apiService(cur);var hasRead=false;window.usePreFetchApiService=function(){if(!cur){return{status:'done'};}var valid;if(type===staticObj.hash){var hashList=cur.hashList||[];valid=hashList.some(function(hash){return hash===getPageHash()||hash===staticObj.all;});}else{var pathList=cur.pathList||[];valid=pathList.some(function(path){return path===getPagePath()||path===staticObj.all;});}if(hasRead||!valid){return{status:'done'};}hasRead=true;return{status:'succ',preFetchService:preService};};}catch(error){window.usePreFetchApiService=function(){return{status:'error'};};}}function getQueryParams(options){var params=options.params||{};var localQuery={};var queryParams={};location.search.replace('?','').split('&').forEach(function(item){if(item){var _item$split=item.split('='),_item$split2=_slicedToArray(_item$split,2),k=_item$split2[0],v=_item$split2[1];localQuery[k]=v;}});Object.keys(params).forEach(function(key){queryParams[key]=localQuery[params[key]];});return queryParams;}function getParams(options){var staticParams=options.staticParams||{};var cookieParams=getCookieParams(options);var queryParams=getQueryParams(options);return _objectSpread(_objectSpread(_objectSpread({},staticParams),cookieParams),queryParams);}function getCookieParams(options){var cookieParams=options.cookieParams||{};var localCookie={};var cookieParamsObj={};var cookie=document.cookie||'';cookie.split(';').forEach(function(item){if(item){var _item$split3=item.split('='),_item$split4=_slicedToArray(_item$split3,2),k=_item$split4[0],v=_item$split4[1];localCookie[k]=v;}});Object.keys(cookieParams).forEach(function(key){cookieParamsObj[key]=localCookie[cookieParams[key]];});return cookieParamsObj;}function apiService(option){try{var fetchResponse=function fetchResponse(response){if(response.ok){return response.json();}return Promise.reject(response.statusText);};var promiseList=option.urls.map(function(item){var apiParams=getParams(item);var init={mode:'cors',credentials:'same-origin',headers:{'Content-Type':'application/json;charset=utf-8'}};var url=item.url;if(item.method==='GET'){var listStr=Object.keys(apiParams).map(function(key){return"".concat(key,"=").concat(apiParams[key]);});url+="?"+listStr.join('&');return fetch(encodeURI(url),_objectSpread(_objectSpread({},init),{},{method:'GET'})).then(fetchResponse);}return fetch(url,_objectSpread(_objectSpread({},init),{},{method:'POST',body:JSON.stringify(apiParams)})).then(fetchResponse);});var errorOutTime=new Error(JSON.stringify({msg:'请求超时'}));var timeOutPromise=new Promise(function(res,rej){setTimeout(function(){rej(errorOutTime);},10*1000);});return Promise.race([Promise.all(promiseList),timeOutPromise]);}catch(error){return Promise.reject(error);}}